name: Release Go project

on:
  push:
    tags:
      - "*" # triggers only if push new tag version, like `0.8.4` or else

jobs:
  build:
    name: Create a Release and Upload Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
        id: go

      - name: Build for Linux
        run: go build -v -ldflags "-s -w" -o bin/linux/migrator ./...

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build -v -ldflags "-s -w" -o bin/windows/migrator.exe ./...

      - name: Build for Mac
        run: GOOS=darwin GOARCH=amd64 go build -v -ldflags "-s -w" -o bin/macos/migrator ./...
        
      - name: Zip artifact # This would actually build your project, using zip for an example artifact
        run: |
          zip -r migrator bin/*
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./migrator.zip
          asset_name: migrator.zip
          asset_content_type: application/zip
